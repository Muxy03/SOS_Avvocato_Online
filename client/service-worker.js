const a=location.pathname.split("/").slice(0,-1).join("/"),m=[a+"/_app/immutable/entry/app.BK9yb5qO.js",a+"/_app/immutable/nodes/0.Ddhfi8MP.js",a+"/_app/immutable/assets/0.BFU7KzWh.css",a+"/_app/immutable/nodes/1.CmXd68w3.js",a+"/_app/immutable/nodes/10.CGRrviuM.js",a+"/_app/immutable/nodes/2.UdjRKS88.js",a+"/_app/immutable/assets/2.CtS9xzIU.css",a+"/_app/immutable/nodes/3.BDgvldc4.js",a+"/_app/immutable/nodes/4.C5mRPUMk.js",a+"/_app/immutable/nodes/5.CzYxVlZo.js",a+"/_app/immutable/nodes/6.BzJWthKl.js",a+"/_app/immutable/nodes/7.C54zpOx3.js",a+"/_app/immutable/assets/7.BTq4hBWC.css",a+"/_app/immutable/nodes/8.C19kM4q4.js",a+"/_app/immutable/assets/8.CH85qEon.css",a+"/_app/immutable/nodes/9.BP0T3OGO.js",a+"/_app/immutable/chunks/AhqUU1ts.js",a+"/_app/immutable/chunks/BeycMaZk.js",a+"/_app/immutable/chunks/Bgbd2wj0.js",a+"/_app/immutable/chunks/BmhJr0QQ.js",a+"/_app/immutable/chunks/Bou_iUIi.js",a+"/_app/immutable/chunks/BrdxJ9sT.js",a+"/_app/immutable/chunks/ByMhJ1lq.js",a+"/_app/immutable/chunks/C9kSmRma.js",a+"/_app/immutable/chunks/CStty2jV.js",a+"/_app/immutable/chunks/CYgJF_JY.js",a+"/_app/immutable/chunks/Ci16hXE_.js",a+"/_app/immutable/chunks/CltT4Sjb.js",a+"/_app/immutable/chunks/D6y1jbd9.js",a+"/_app/immutable/chunks/DjkyPSQU.js",a+"/_app/immutable/chunks/DsnmJJEf.js",a+"/_app/immutable/chunks/Dzlaz3fn.js",a+"/_app/immutable/chunks/PD1Wq3xD.js",a+"/_app/immutable/chunks/nGUMutCJ.js",a+"/_app/immutable/entry/start.CfuuxA8c.js"],l=[a+"/apple-touch-icon-180x180.png",a+"/favicon.ico",a+"/logo.svg",a+"/manifest.json",a+"/maskable-icon-512x512.png",a+"/pwa-192x192.png",a+"/pwa-512x512.png",a+"/pwa-64x64.png"],u="1753905380109",c=`cache-${u}`,o=[...m,...l];self.addEventListener("install",s=>{async function t(){await(await caches.open(c)).addAll(o)}s.waitUntil(t())});self.addEventListener("activate",s=>{async function t(){for(const n of await caches.keys())n!==c&&await caches.delete(n)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function t(){const n=new URL(s.request.url),i=await caches.open(c);if(o.includes(n.pathname)){const e=await i.match(n.pathname);if(e)return e}try{const e=await fetch(s.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&i.put(s.request,e.clone()),e}catch(e){const p=await i.match(s.request);if(p)return p;throw e}}s.respondWith(t())});self.addEventListener("message",s=>{s.data&&s.data.type==="SKIP_WAITING"&&self.skipWaiting()});self.addEventListener("sync",s=>{s.tag==="background-sync"&&s.waitUntil(d())});async function d(){console.log("Background sync triggered")}self.addEventListener("push",s=>{if(s.data){const t=s.data.json(),n={body:t.body,icon:t.icon||"/favicon.png",badge:"/badge.png",vibrate:[100,50,100],data:t.data,actions:t.actions};s.waitUntil(self.registration.showNotification(t.title,n))}});self.addEventListener("notificationclick",s=>{s.notification.close(),s.action==="open_url"&&s.notification.data.url&&s.waitUntil(clients.openWindow(s.notification.data.url))});
